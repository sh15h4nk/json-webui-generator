{"version":3,"sources":["apiFiles sync /^/.//.*/-api/.json$","logo.svg","Rating.tsx","RatingControl.tsx","ratingControlTester.ts","App.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Rating","value","updateValue","useState","hoverAt","setHoverAt","className","style","cursor","i","fullStars","onMouseOver","onMouseOut","onClick","withJsonFormsControlProps","data","handleChange","path","newValue","rankWith","scopeEndsWith","useStyles","makeStyles","_theme","container","padding","width","title","textAlign","dataContent","display","justifyContent","borderRadius","backgroundColor","marginBottom","buttonLayout","button","margin","form","initialData","initialErrors","renderers","materialRenderers","tester","ratingControlTester","renderer","RatingControl","App","classes","displayDataAsString","setDisplayDataAsString","jsonformsData","setJsonformsData","useEffect","JSON","stringify","validationErrors","setValidationErrors","recordErrors","errors","errorToFocus","React","generateFile","a","length","fileName","json","blob","Blob","type","URL","createObjectURL","href","link","document","createElement","download","body","appendChild","click","removeChild","console","log","current","scrollIntoView","behavior","block","comminutiesFiles","setCommunitiesFiles","fetch","then","response","communities","sort","forEach","comm","push","label","src","logo","alt","Grid","justify","spacing","item","sm","Typography","variant","options","onChange","community","loadData","Text","Button","require","setData","color","ref","d","dataPath","message","schema","uischema","cells","materialCells","validationMode","theme","createMuiTheme","overrides","MuiFormControl","root","ReactDOM","render","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.dff89717.chunk.js","sourcesContent":["var map = {\n\t\"./weimarnetz-api.json\": 867\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 866;","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport { useState } from 'react';\n\ninterface RatingProps {\n  id?: string;\n  value: number;\n  updateValue: (newValue: number) => void;\n}\n\nexport const Rating: React.FC<RatingProps> = ({ id, value, updateValue }) => {\n  const [hoverAt, setHoverAt] = useState<number | null>(null);\n\n  return (\n    <div id='#/properties/rating' className='rating'>\n      <p>Rating:</p>\n      <span style={{ cursor: 'pointer' }}>\n        {[0, 1, 2, 3, 4].map((i) => {\n          const fullStars = hoverAt ?? value;\n\n          return (\n            <span\n              onMouseOver={() => setHoverAt(i + 1)}\n              onMouseOut={() => setHoverAt(null)}\n              onClick={() => updateValue(i + 1)}\n              key={`${id}_${i}`}\n            >\n              {i < fullStars ? '\\u2605' : '\\u2606'}\n            </span>\n          );\n        })}\n      </span>\n    </div>\n  );\n};\n","import { withJsonFormsControlProps } from '@jsonforms/react';\nimport { Rating } from './Rating';\n\ninterface RatingControlProps {\n  data: any;\n  handleChange(path: string, value: any): void;\n  path: string;\n}\n\nconst RatingControl = ({ data, handleChange, path }: RatingControlProps) => (\n  <Rating\n    value={data}\n    updateValue={(newValue: number) => handleChange(path, newValue)}\n  />\n);\n\nexport default withJsonFormsControlProps(RatingControl);\n","import { rankWith, scopeEndsWith } from '@jsonforms/core';\n\nexport default rankWith(\n  3, //increase rank as needed\n  scopeEndsWith('rating')\n);\n","import { Fragment, useState, useEffect } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport logo from './logo.svg';\nimport './App.css';\nimport schema from './schema.json';\nimport uischema from './uischema.json';\nimport {\n  materialCells,\n  materialRenderers,\n} from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Text } from 'react-native';\nimport * as React from 'react';\nimport Select from 'react-select'     \n\nconst useStyles = makeStyles((_theme) => ({\n  container: {\n    padding: '1em',\n    width: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em',\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece',\n    marginBottom: '1rem',\n    padding: \"1rem\"\n  },\n  buttonLayout: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    marginBottom: '1rem',\n    padding: \"1rem\"\n  },\n  button: {\n    margin: 'auto',\n    display: 'block',\n  },\n  form: {\n    margin: 'auto',\n    padding: '1rem',\n  },\n}));\n\n\n//    Req. Parameters\n//initial Data of the jsonform\nconst initialData = {};\n//initla errors\nlet initialErrors: Array<{message: string, dataPath: string}> = [];\n\n//    Renderer set\nconst renderers = [\n  ...materialRenderers,\n  //register custom renderers\n  { tester: ratingControlTester, renderer: RatingControl },\n];\n\n//    Forms App\nconst App = () => {\n\n  const classes = useStyles();  //for user defined css styles\n\n  //    Form data hooks\n  const [displayDataAsString, setDisplayDataAsString] = useState('');\n  const [jsonformsData, setJsonformsData] = useState<any>(initialData);\n\n  useEffect(() => {\n    setDisplayDataAsString(JSON.stringify(jsonformsData, null, 2));\n  }, [jsonformsData]);\n\n\n  //   FormsData functions\n  //To clear the form data\n  const clearData = () => {\n    setJsonformsData({});\n  };\n  //To set form data\n  let setData = (community: string) => {\n    var data = require(\"../src/apiFiles/\"+community+\"-api.json\");\n    setJsonformsData(data);\n  }\n\n  //    Validation Error Hooks\n  const [validationErrors, setValidationErrors] = useState(initialErrors);\n\n  //  ValidationErrors Functions\n  //to record the errors from event emmiter\n  let recordErrors = (errors: any) => {\n    setValidationErrors(errors);\n  }\n\n  //creating a refernce for validation error div\n  const errorToFocus = React.createRef<HTMLDivElement>();\n\n  //to validate the data and generate the json file\n  let generateFile = async () => {\n    if (validationErrors.length === 0 && Object.keys(jsonformsData).length !== 0) {\n      const fileName = \"yourapi\";\n      const json = JSON.stringify(jsonformsData);\n      const blob = new Blob([json],{type:'application/json'});\n      const href = await URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = href;\n      link.download = fileName + \".json\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      return console.log(\"generated\");\n    }\n    if(errorToFocus.current) errorToFocus.current.scrollIntoView({ behavior: \"smooth\", block: \"nearest\" })\n    console.log(\"Can't generate\");\n  }\n\n  //fetching all the API files\n  const [comminutiesFiles, setCommunitiesFiles ] = useState([]);\n  const fetchApiFiles = () => {\n    fetch(\"https://api.freifunk.net/data/ffSummarizedDir.json\")\n      .then(response => response.json())\n      .then(data => setCommunitiesFiles(data))\n  }\n  useEffect( () => {\n    fetchApiFiles()\n  },[])\n  \n  //list of communities to select\n  const communities: Array<{value: string, label: string}> = []\n  Object.keys(comminutiesFiles).sort().forEach((comm)=> {\n    communities.push({ value: comm, label: comm})\n  })\n\n  //to load the data into the form\n  let loadData = (community: any) => {\n    console.log(community.value)\n    setJsonformsData(comminutiesFiles[community.value]);\n  }\n\n  return (\n    <Fragment>\n      <div className='App'>\n        <header className='App-header'>\n          <img src={logo} className='App-logo' alt='logo' />\n          <h1 className='App-title'>API Generator</h1>\n          <p className='App-intro'>More Forms. Less Code.</p>\n        </header>\n      </div>\n\n      <Grid\n        container\n        justify={'center'}\n        spacing={1}\n        className={classes.container}\n      >\n        <Grid item sm={6}>\n\n          <Typography variant={'h3'} className={classes.title}>\n            Load Data\n          </Typography>\n\n          <div className={classes.container}>\n            <Select\n              options={communities}\n              onChange={community => loadData(community)}\n            />\n          </div>\n\n          <Typography variant={'h3'} className={classes.title}>\n            Bound data\n          </Typography>\n\n          <div id='boundData' className={classes.dataContent}>\n            <Text>{displayDataAsString}</Text>\n          </div>\n\n          <div className={classes.buttonLayout}>\n            <Button\n              className={classes.button}\n              onClick={()=> setData('weimarnetz')}\n              color='primary'\n              variant='contained'\n            >\n              Set data\n            </Button>\n            <br/>\n            <Button\n              className={classes.button}\n              onClick={clearData}\n              color='primary'\n              variant='contained'\n            >\n              Clear data\n            </Button>\n          </div>\n\n          <div ref={errorToFocus}>\n            <Typography variant={'h3'} className={classes.title}>\n              Validation\n            </Typography>\n\n            <div className={classes.dataContent}>\n              <Text>{validationErrors.map(d => <li key= {d.dataPath}>{d.dataPath}:{d.message}</li>)}</Text>\n            </div>\n          </div>\n\n        </Grid>\n\n        <Grid item sm={6}>\n          <Typography variant={'h3'} className={classes.title}>\n            Generator form\n          </Typography>\n          <div className={classes.form}>\n            <Button\n              className={classes.button}\n              onClick={generateFile}\n              color='primary'\n              variant='contained'\n            >Generate API FILE</Button>\n            <JsonForms\n              schema={schema}\n              uischema={uischema}\n              data={jsonformsData}\n              renderers={renderers}\n              cells={materialCells}\n              validationMode={\"ValidateAndShow\"}\n              onChange={({ errors, data }) => {\n                  setJsonformsData(data);\n                  recordErrors(errors);\n                  if (Object.keys(jsonformsData).length === 0) recordErrors([]);\n                }\n              }\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/**\n * Customize form so each control has more space\n */\nconst theme = createMuiTheme({\n  overrides: {\n    MuiFormControl: {\n      root: {\n        margin: '0.8em 0',\n      },\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}