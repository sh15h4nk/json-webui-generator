{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["schema","require","uischema","initialdata","App","useState","data","setData","className","renderers","materialRenderers","cells","materialCells","onChange","errors","Button","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2ltBAaMA,EAASC,EAAQ,KACjBC,EAAWD,EAAQ,KAEnBE,EAAcF,EAAQ,KAqBbG,MAnBf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACE,sBAAKC,UAAU,gBAAf,UACE,cAAC,YAAD,CACER,OAAQA,EACRE,SAAUA,EACVI,KAAMA,EACNG,UAAWC,oBACXC,MAAOC,gBACPC,SAAU,cAAGC,OAAH,IAAWR,EAAX,EAAWA,KAAX,OAAsBC,EAAQD,MAG1C,cAACS,EAAA,EAAD,CAAQC,QAAS,kBAAKT,EAAQJ,IAA9B,wBACA,cAACY,EAAA,EAAD,CAAQC,QAAS,kBAAKT,EAAQ,KAA9B,yBCpBSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.94b6a3e6.chunk.js","sourcesContent":["import './App.css';\n\nimport {\n  materialRenderers,\n  materialCells,\n} from '@jsonforms/material-renderers';\nimport { JsonForms } from '@jsonforms/react';\n\nimport React, { useState } from 'react';\n\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst schema = require('../src/draft7');\nconst uischema = require(\"../src/uischema\");\n\nconst initialdata = require('../src/weimarnetz-api');\n\nfunction App() {\n  const [data, setData] = useState({});\n  return (\n    <div className=\"App container\">\n      <JsonForms\n        schema={schema}\n        uischema={uischema}\n        data={data}\n        renderers={materialRenderers}\n        cells={materialCells}\n        onChange={({ errors, data }) => setData(data)}\n      />\n\n      <Button onClick={()=> setData(initialdata)}> Initiate </Button>\n      <Button onClick={()=> setData({})}> Clear </Button>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}